/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  VBEP20Harness,
  VBEP20HarnessInterface,
} from "../../test/VBEP20Harness";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "underlying_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "failTransferFromAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "failTransferToAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "harnessSetBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_fail",
        type: "bool",
      },
    ],
    name: "harnessSetFailTransferFromAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_fail",
        type: "bool",
      },
    ],
    name: "harnessSetFailTransferToAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000bc938038062000bc983398101604081905262000034916200023f565b600385905533600090815260056020908152604082208790558551879287928792879286928692869286926200006e9290860190620000cc565b50805162000084906001906020840190620000cc565b50506002805460ff191660ff929092169190911790555050600880546001600160a01b0319166001600160a01b039690961695909517909455506200032e9650505050505050565b828054620000da90620002f2565b90600052602060002090601f016020900481019282620000fe576000855562000149565b82601f106200011957805160ff191683800117855562000149565b8280016001018555821562000149579182015b82811115620001495782518255916020019190600101906200012c565b50620001579291506200015b565b5090565b5b808211156200015757600081556001016200015c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019a57600080fd5b81516001600160401b0380821115620001b757620001b762000172565b604051601f8301601f19908116603f01168101908282118183101715620001e257620001e262000172565b81604052838152602092508683858801011115620001ff57600080fd5b600091505b8382101562000223578582018301518183018401529082019062000204565b83821115620002355760008385830101525b9695505050505050565b600080600080600060a086880312156200025857600080fd5b855160208701519095506001600160401b03808211156200027857600080fd5b6200028689838a0162000188565b95506040880151915060ff821682146200029f57600080fd5b606088015191945080821115620002b557600080fd5b50620002c48882890162000188565b608088015190935090506001600160a01b0381168114620002e457600080fd5b809150509295509295909350565b600181811c908216806200030757607f821691505b6020821081036200032857634e487b7160e01b600052602260045260246000fd5b50919050565b61088b806200033e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636f307dc311610097578063a9059cbb11610066578063a9059cbb14610258578063d401c2931461026b578063d9a7eb70146102a4578063dd62ed3e146102ce57600080fd5b80636f307dc3146101ca57806370a08231146101f557806395d89b411461021557806398d43e061461021d57600080fd5b806323b872dd116100d357806323b872dd14610152578063313ce567146101655780634135cd75146101845780635521ade2146101a757600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b6101026102f9565b60405161010f919061069e565b60405180910390f35b61012b61012636600461070f565b610387565b604051901515815260200161010f565b61014460035481565b60405190815260200161010f565b61012b610160366004610739565b6103f4565b6002546101729060ff1681565b60405160ff909116815260200161010f565b61012b610192366004610775565b60066020526000908152604090205460ff1681565b61012b6101b5366004610775565b60076020526000908152604090205460ff1681565b6008546101dd906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b610144610203366004610775565b60056020526000908152604090205481565b610102610584565b61025661022b366004610790565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b005b61012b61026636600461070f565b610591565b610256610279366004610790565b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b6102566102b236600461070f565b6001600160a01b03909116600090815260056020526040902055565b6101446102dc3660046107cc565b600460209081526000928352604080842090915290825290205481565b60008054610306906107ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610332906107ff565b801561037f5780601f106103545761010080835404028352916020019161037f565b820191906000526020600020905b81548152906001019060200180831161036257829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103e29086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526006602052604081205460ff161561041d5750600061057d565b604080518082018252601681527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006020808301919091526001600160a01b0387166000908152600482528381203382529091529190912054610480918490610651565b6001600160a01b038516600081815260046020908152604080832033845282528083209490945583518085018552601481527f496e73756666696369656e742062616c616e6365000000000000000000000000818301529282526005905291909120546104ee918490610651565b6001600160a01b03808616600090815260056020526040808220939093559085168152205461051d9083610686565b6001600160a01b0380851660008181526005602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105719086815260200190565b60405180910390a35060015b9392505050565b60018054610306906107ff565b6001600160a01b03821660009081526007602052604081205460ff16156105ba575060006103ee565b336000908152600560205260409020546105d49083610692565b33600090815260056020526040808220929092556001600160a01b038516815220546106009083610686565b6001600160a01b0384166000818152600560205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103e29086815260200190565b6000818484111561067e5760405162461bcd60e51b8152600401610675919061069e565b60405180910390fd5b505050900390565b600061057d828461084f565b600061057d8284610867565b600060208083528351808285015260005b818110156106cb578581018301518582016040015282016106af565b818111156106dd576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461070a57600080fd5b919050565b6000806040838503121561072257600080fd5b61072b836106f3565b946020939093013593505050565b60008060006060848603121561074e57600080fd5b610757846106f3565b9250610765602085016106f3565b9150604084013590509250925092565b60006020828403121561078757600080fd5b61057d826106f3565b600080604083850312156107a357600080fd5b6107ac836106f3565b9150602083013580151581146107c157600080fd5b809150509250929050565b600080604083850312156107df57600080fd5b6107e8836106f3565b91506107f6602084016106f3565b90509250929050565b600181811c9082168061081357607f821691505b60208210810361083357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561086257610862610839565b500190565b60008282101561087957610879610839565b50039056fea164736f6c634300080d000a";

type VBEP20HarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VBEP20HarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VBEP20Harness__factory extends ContractFactory {
  constructor(...args: VBEP20HarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initialAmount: PromiseOrValue<BigNumberish>,
    _tokenName: PromiseOrValue<string>,
    _decimalUnits: PromiseOrValue<BigNumberish>,
    _tokenSymbol: PromiseOrValue<string>,
    underlying_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VBEP20Harness> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      underlying_,
      overrides || {}
    ) as Promise<VBEP20Harness>;
  }
  override getDeployTransaction(
    _initialAmount: PromiseOrValue<BigNumberish>,
    _tokenName: PromiseOrValue<string>,
    _decimalUnits: PromiseOrValue<BigNumberish>,
    _tokenSymbol: PromiseOrValue<string>,
    underlying_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      underlying_,
      overrides || {}
    );
  }
  override attach(address: string): VBEP20Harness {
    return super.attach(address) as VBEP20Harness;
  }
  override connect(signer: Signer): VBEP20Harness__factory {
    return super.connect(signer) as VBEP20Harness__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VBEP20HarnessInterface {
    return new utils.Interface(_abi) as VBEP20HarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VBEP20Harness {
    return new Contract(address, _abi, signerOrProvider) as VBEP20Harness;
  }
}
