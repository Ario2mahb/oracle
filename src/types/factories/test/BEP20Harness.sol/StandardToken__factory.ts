/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  StandardToken,
  StandardTokenInterface,
} from "../../../test/BEP20Harness.sol/StandardToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200098d3803806200098d833981016040819052620000349162000206565b6003849055336000908152600560209081526040822086905584516200005e929186019062000093565b5080516200007490600190602084019062000093565b50506002805460ff191660ff9290921691909117905550620002d19050565b828054620000a19062000295565b90600052602060002090601f016020900481019282620000c5576000855562000110565b82601f10620000e057805160ff191683800117855562000110565b8280016001018555821562000110579182015b8281111562000110578251825591602001919060010190620000f3565b506200011e92915062000122565b5090565b5b808211156200011e576000815560010162000123565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016157600080fd5b81516001600160401b03808211156200017e576200017e62000139565b604051601f8301601f19908116603f01168101908282118183101715620001a957620001a962000139565b81604052838152602092508683858801011115620001c657600080fd5b600091505b83821015620001ea5785820183015181830184015290820190620001cb565b83821115620001fc5760008385830101525b9695505050505050565b600080600080608085870312156200021d57600080fd5b845160208601519094506001600160401b03808211156200023d57600080fd5b6200024b888389016200014f565b94506040870151915060ff821682146200026457600080fd5b6060870151919350808211156200027a57600080fd5b5062000289878288016200014f565b91505092959194509250565b600181811c90821680620002aa57607f821691505b602082108103620002cb57634e487b7160e01b600052602260045260246000fd5b50919050565b6106ac80620002e16000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b4114610152578063a9059cbb1461015a578063dd62ed3e1461016d57600080fd5b8063313ce5671461011357806370a082311461013257600080fd5b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e957806323b872dd14610100575b600080fd5b6100b0610198565b6040516100bd919061051a565b60405180910390f35b6100d96100d436600461058b565b610226565b60405190151581526020016100bd565b6100f260035481565b6040519081526020016100bd565b6100d961010e3660046105b5565b610292565b6002546101209060ff1681565b60405160ff90911681526020016100bd565b6100f26101403660046105f1565b60056020526000908152604090205481565b6100b06103f7565b6100d961016836600461058b565b610404565b6100f261017b36600461060c565b600460209081526000928352604080842090915290825290205481565b600080546101a59061063f565b80601f01602080910402602001604051908101604052809291908181526020018280546101d19061063f565b801561021e5780601f106101f35761010080835404028352916020019161021e565b820191906000526020600020905b81548152906001019060200180831161020157829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102819086815260200190565b60405180910390a350600192915050565b604080518082018252601681527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006020808301919091526001600160a01b038616600090815260048252838120338252909152918220546102f49184906104d2565b6001600160a01b038516600081815260046020908152604080832033845282528083209490945583518085018552601481527f496e73756666696369656e742062616c616e6365000000000000000000000000818301529282526005905291909120546103629184906104d2565b6001600160a01b0380861660009081526005602052604080822093909355908516815220546103919083610507565b6001600160a01b0380851660008181526005602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103e59086815260200190565b60405180910390a35060019392505050565b600180546101a59061063f565b604080518082018252601481527f496e73756666696369656e742062616c616e63650000000000000000000000006020808301919091523360009081526005909152918220546104559184906104d2565b33600090815260056020526040808220929092556001600160a01b038516815220546104819083610507565b6001600160a01b0384166000818152600560205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906102819086815260200190565b600081848411156104ff5760405162461bcd60e51b81526004016104f6919061051a565b60405180910390fd5b505050900390565b60006105138284610679565b9392505050565b600060208083528351808285015260005b818110156105475785810183015185820160400152820161052b565b81811115610559576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461058657600080fd5b919050565b6000806040838503121561059e57600080fd5b6105a78361056f565b946020939093013593505050565b6000806000606084860312156105ca57600080fd5b6105d38461056f565b92506105e16020850161056f565b9150604084013590509250925092565b60006020828403121561060357600080fd5b6105138261056f565b6000806040838503121561061f57600080fd5b6106288361056f565b91506106366020840161056f565b90509250929050565b600181811c9082168061065357607f821691505b60208210810361067357634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561069a57634e487b7160e01b600052601160045260246000fd5b50019056fea164736f6c634300080d000a";

type StandardTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StandardTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StandardToken__factory extends ContractFactory {
  constructor(...args: StandardTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initialAmount: PromiseOrValue<BigNumberish>,
    _tokenName: PromiseOrValue<string>,
    _decimalUnits: PromiseOrValue<BigNumberish>,
    _tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StandardToken> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    ) as Promise<StandardToken>;
  }
  override getDeployTransaction(
    _initialAmount: PromiseOrValue<BigNumberish>,
    _tokenName: PromiseOrValue<string>,
    _decimalUnits: PromiseOrValue<BigNumberish>,
    _tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): StandardToken {
    return super.attach(address) as StandardToken;
  }
  override connect(signer: Signer): StandardToken__factory {
    return super.connect(signer) as StandardToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StandardTokenInterface {
    return new utils.Interface(_abi) as StandardTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StandardToken {
    return new Contract(address, _abi, signerOrProvider) as StandardToken;
  }
}
