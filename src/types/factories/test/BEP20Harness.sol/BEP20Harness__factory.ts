/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BEP20Harness,
  BEP20HarnessInterface,
} from "../../../test/BEP20Harness.sol/BEP20Harness";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_initialAmount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimalUnits",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "failTransferFromAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "failTransferToAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "harnessSetBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_fail",
        type: "bool",
      },
    ],
    name: "harnessSetFailTransferFromAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_fail",
        type: "bool",
      },
    ],
    name: "harnessSetFailTransferToAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000b4438038062000b44833981016040819052620000349162000214565b60038490553360009081526005602090815260408220869055845186928692869286926200006892909190860190620000a1565b5080516200007e906001906020840190620000a1565b50506002805460ff191660ff9290921691909117905550620002df945050505050565b828054620000af90620002a3565b90600052602060002090601f016020900481019282620000d357600085556200011e565b82601f10620000ee57805160ff19168380011785556200011e565b828001600101855582156200011e579182015b828111156200011e57825182559160200191906001019062000101565b506200012c92915062000130565b5090565b5b808211156200012c576000815560010162000131565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200016f57600080fd5b81516001600160401b03808211156200018c576200018c62000147565b604051601f8301601f19908116603f01168101908282118183101715620001b757620001b762000147565b81604052838152602092508683858801011115620001d457600080fd5b600091505b83821015620001f85785820183015181830184015290820190620001d9565b838211156200020a5760008385830101525b9695505050505050565b600080600080608085870312156200022b57600080fd5b845160208601519094506001600160401b03808211156200024b57600080fd5b62000259888389016200015d565b94506040870151915060ff821682146200027257600080fd5b6060870151919350808211156200028857600080fd5b5062000297878288016200015d565b91505092959194509250565b600181811c90821680620002b857607f821691505b602082108103620002d957634e487b7160e01b600052602260045260246000fd5b50919050565b61085580620002ef6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a9059cbb11610066578063a9059cbb14610222578063d401c29314610235578063d9a7eb701461026e578063dd62ed3e1461029857600080fd5b806370a08231146101bf57806395d89b41146101df57806398d43e06146101e757600080fd5b806323b872dd116100c857806323b872dd14610147578063313ce5671461015a5780634135cd75146101795780635521ade21461019c57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f76102c3565b6040516101049190610668565b60405180910390f35b61012061011b3660046106d9565b610351565b6040519015158152602001610104565b61013960035481565b604051908152602001610104565b610120610155366004610703565b6103be565b6002546101679060ff1681565b60405160ff9091168152602001610104565b61012061018736600461073f565b60066020526000908152604090205460ff1681565b6101206101aa36600461073f565b60076020526000908152604090205460ff1681565b6101396101cd36600461073f565b60056020526000908152604090205481565b6100f761054e565b6102206101f536600461075a565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b005b6101206102303660046106d9565b61055b565b61022061024336600461075a565b6001600160a01b03919091166000908152600760205260409020805460ff1916911515919091179055565b61022061027c3660046106d9565b6001600160a01b03909116600090815260056020526040902055565b6101396102a6366004610796565b600460209081526000928352604080842090915290825290205481565b600080546102d0906107c9565b80601f01602080910402602001604051908101604052809291908181526020018280546102fc906107c9565b80156103495780601f1061031e57610100808354040283529160200191610349565b820191906000526020600020905b81548152906001019060200180831161032c57829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103ac9086815260200190565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526006602052604081205460ff16156103e757506000610547565b604080518082018252601681527f496e73756666696369656e7420616c6c6f77616e6365000000000000000000006020808301919091526001600160a01b038716600090815260048252838120338252909152919091205461044a91849061061b565b6001600160a01b038516600081815260046020908152604080832033845282528083209490945583518085018552601481527f496e73756666696369656e742062616c616e6365000000000000000000000000818301529282526005905291909120546104b891849061061b565b6001600160a01b0380861660009081526005602052604080822093909355908516815220546104e79083610650565b6001600160a01b0380851660008181526005602052604090819020939093559151908616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061053b9086815260200190565b60405180910390a35060015b9392505050565b600180546102d0906107c9565b6001600160a01b03821660009081526007602052604081205460ff1615610584575060006103b8565b3360009081526005602052604090205461059e908361065c565b33600090815260056020526040808220929092556001600160a01b038516815220546105ca9083610650565b6001600160a01b0384166000818152600560205260409081902092909255905133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103ac9086815260200190565b600081848411156106485760405162461bcd60e51b815260040161063f9190610668565b60405180910390fd5b505050900390565b60006105478284610819565b60006105478284610831565b600060208083528351808285015260005b8181101561069557858101830151858201604001528201610679565b818111156106a7576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146106d457600080fd5b919050565b600080604083850312156106ec57600080fd5b6106f5836106bd565b946020939093013593505050565b60008060006060848603121561071857600080fd5b610721846106bd565b925061072f602085016106bd565b9150604084013590509250925092565b60006020828403121561075157600080fd5b610547826106bd565b6000806040838503121561076d57600080fd5b610776836106bd565b91506020830135801515811461078b57600080fd5b809150509250929050565b600080604083850312156107a957600080fd5b6107b2836106bd565b91506107c0602084016106bd565b90509250929050565b600181811c908216806107dd57607f821691505b6020821081036107fd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561082c5761082c610803565b500190565b60008282101561084357610843610803565b50039056fea164736f6c634300080d000a";

type BEP20HarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BEP20HarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BEP20Harness__factory extends ContractFactory {
  constructor(...args: BEP20HarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _initialAmount: PromiseOrValue<BigNumberish>,
    _tokenName: PromiseOrValue<string>,
    _decimalUnits: PromiseOrValue<BigNumberish>,
    _tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BEP20Harness> {
    return super.deploy(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    ) as Promise<BEP20Harness>;
  }
  override getDeployTransaction(
    _initialAmount: PromiseOrValue<BigNumberish>,
    _tokenName: PromiseOrValue<string>,
    _decimalUnits: PromiseOrValue<BigNumberish>,
    _tokenSymbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _initialAmount,
      _tokenName,
      _decimalUnits,
      _tokenSymbol,
      overrides || {}
    );
  }
  override attach(address: string): BEP20Harness {
    return super.attach(address) as BEP20Harness;
  }
  override connect(signer: Signer): BEP20Harness__factory {
    return super.connect(signer) as BEP20Harness__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BEP20HarnessInterface {
    return new utils.Interface(_abi) as BEP20HarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BEP20Harness {
    return new Contract(address, _abi, signerOrProvider) as BEP20Harness;
  }
}
