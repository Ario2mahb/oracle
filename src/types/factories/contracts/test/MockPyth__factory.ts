/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockPyth,
  MockPythInterface,
} from "../../../contracts/test/MockPyth";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "batchSize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "freshPricesInBatch",
        type: "uint256",
      },
    ],
    name: "BatchPriceFeedUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "fresh",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequenceNumber",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "lastPublishTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "publishTime",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "int64",
        name: "price",
        type: "int64",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "conf",
        type: "uint64",
      },
    ],
    name: "PriceFeedUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "batchCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "UpdatePriceFeeds",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getCurrentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getEmaPrice",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getLatestAvailablePriceUnsafe",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "publishTime",
        type: "uint64",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "duration",
        type: "uint64",
      },
    ],
    name: "getLatestAvailablePriceWithinDuration",
    outputs: [
      {
        components: [
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
        ],
        internalType: "struct PythStructs.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "updateDataSize",
        type: "uint256",
      },
    ],
    name: "getUpdateFee",
    outputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "priceFeeds",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "productId",
        type: "bytes32",
      },
      {
        internalType: "int64",
        name: "price",
        type: "int64",
      },
      {
        internalType: "uint64",
        name: "conf",
        type: "uint64",
      },
      {
        internalType: "int32",
        name: "expo",
        type: "int32",
      },
      {
        internalType: "enum PythStructs.PriceStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "maxNumPublishers",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "numPublishers",
        type: "uint32",
      },
      {
        internalType: "int64",
        name: "emaPrice",
        type: "int64",
      },
      {
        internalType: "uint64",
        name: "emaConf",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "publishTime",
        type: "uint64",
      },
      {
        internalType: "int64",
        name: "prevPrice",
        type: "int64",
      },
      {
        internalType: "uint64",
        name: "prevConf",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "prevPublishTime",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "queryPriceFeed",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "productId",
            type: "bytes32",
          },
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "enum PythStructs.PriceStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "maxNumPublishers",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "numPublishers",
            type: "uint32",
          },
          {
            internalType: "int64",
            name: "emaPrice",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "emaConf",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "publishTime",
            type: "uint64",
          },
          {
            internalType: "int64",
            name: "prevPrice",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "prevConf",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "prevPublishTime",
            type: "uint64",
          },
        ],
        internalType: "struct PythStructs.PriceFeed",
        name: "priceFeed",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
    ],
    name: "updatePriceFeeds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "productId",
            type: "bytes32",
          },
          {
            internalType: "int64",
            name: "price",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "conf",
            type: "uint64",
          },
          {
            internalType: "int32",
            name: "expo",
            type: "int32",
          },
          {
            internalType: "enum PythStructs.PriceStatus",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "maxNumPublishers",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "numPublishers",
            type: "uint32",
          },
          {
            internalType: "int64",
            name: "emaPrice",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "emaConf",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "publishTime",
            type: "uint64",
          },
          {
            internalType: "int64",
            name: "prevPrice",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "prevConf",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "prevPublishTime",
            type: "uint64",
          },
        ],
        internalType: "struct PythStructs.PriceFeed[]",
        name: "feeds",
        type: "tuple[]",
      },
    ],
    name: "updatePriceFeedsHarness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "updateData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32[]",
        name: "priceIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint64[]",
        name: "publishTimes",
        type: "uint64[]",
      },
    ],
    name: "updatePriceFeedsIfNecessary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061111e806100206000396000f3fe6080604052600436106100b15760003560e01c8063c52935fc11610069578063caaf43f11161004e578063caaf43f1146102da578063e17efd4814610307578063ef9e5e281461033657600080fd5b8063c52935fc146101e7578063c6c3f71e1461020757600080fd5b8063706dd32f1161009a578063706dd32f146101b2578063b5dcc911146100b6578063b9256d28146101d457600080fd5b8063161e444e146100b65780632b69ad3f1461011d575b600080fd5b3480156100c257600080fd5b506101076100d1366004610737565b50604080516060808201835260008083526020808401829052928401819052835191820184528082529181018290529182015290565b6040516101149190610750565b60405180910390f35b34801561012957600080fd5b50610171610138366004610737565b50604080516060808201835260008083526020808401829052928401819052835191820184528082529181018290529182018190529091565b60408051835160070b815260208085015167ffffffffffffffff908116918301919091529382015160030b9181019190915291166060820152608001610114565b3480156101be57600080fd5b506101d26101cd366004610781565b610347565b005b6101d26101e23660046109d0565b505050565b3480156101f357600080fd5b50610107610202366004610aac565b61040a565b34801561021357600080fd5b506102c0610222366004610737565b600060208190529081526040902080546001820154600283015460038085015460049095015493949293600783810b9467ffffffffffffffff68010000000000000000808704821696600160801b80820490970b9660ff600160a01b8304169663ffffffff600160a81b8404811697600160c81b909404169580840b95858204811695938204811694600160c01b90920490910b928282169204168e565b6040516101149e9d9c9b9a99989796959493929190610b14565b3480156102e657600080fd5b506102fa6102f5366004610737565b6104f7565b6040516101149190610be8565b34801561031357600080fd5b50610328610322366004610737565b50600090565b604051908152602001610114565b6101d2610344366004610d19565b50565b806103995760405162461bcd60e51b815260206004820152601560248201527f6665656473206c656e677468206d757374203e2030000000000000000000000060448201526064015b60405180910390fd5b60005b818110156101e2578282828181106103b6576103b6610d56565b90506101c002016000808585858181106103d2576103d2610d56565b90506101c0020160000135815260200190815260200160002081816103f79190610e2c565b506104039050816110e1565b905061039c565b6040805160608101825260008082526020820181905291810182905290610430846104f7565b60408082015160070b8452606082015167ffffffffffffffff9081166020860152608083015160030b918501919091526101408201519192508481169061047a9042908416610712565b11156104ee5760405162461bcd60e51b815260206004820152602860248201527f4e6f20617661696c61626c652070726963652077697468696e20676976656e2060448201527f6475726174696f6e0000000000000000000000000000000000000000000000006064820152608401610390565b50505b92915050565b604080516101c08101825260008082526020808301829052828401829052606083018290526080830182905260a0830182905260c0830182905260e08301829052610100830182905261012083018290526101408301829052610160830182905261018083018290526101a08301829052848252819052918220549091036105e75760405162461bcd60e51b815260206004820152602a60248201527f6e6f207072696365206665656420666f756e6420666f7220746865206769766560448201527f6e207072696365206964000000000000000000000000000000000000000000006064820152608401610390565b6000828152602081815260409182902082516101c081018452815481526001820154928101929092526002810154600781900b9383019390935268010000000000000000830467ffffffffffffffff166060830152600160801b8304600390810b60808401529192909160a0840191600160a01b900460ff169081111561067057610670610adc565b600381111561068157610681610adc565b8152600282015463ffffffff600160a81b820481166020840152600160c81b9091041660408201526003820154600781810b606084015267ffffffffffffffff6801000000000000000080840482166080860152600160801b8404821660a0860152600160c01b90930490910b60c084015260049093015480841660e0840152049091166101009091015292915050565b60008183111561072d5761072682846110fa565b90506104f1565b61072683836110fa565b60006020828403121561074957600080fd5b5035919050565b815160070b815260208083015167ffffffffffffffff169082015260408083015160030b90820152606081016104f1565b6000806020838503121561079457600080fd5b823567ffffffffffffffff808211156107ac57600080fd5b818501915085601f8301126107c057600080fd5b8135818111156107cf57600080fd5b8660206101c0830285010111156107e557600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610836576108366107f7565b604052919050565b600067ffffffffffffffff821115610858576108586107f7565b5060051b60200190565b6000601f838184011261087457600080fd5b823560206108896108848361083e565b61080d565b82815260059290921b850181019181810190878411156108a857600080fd5b8287015b8481101561093f57803567ffffffffffffffff808211156108cd5760008081fd5b818a0191508a603f8301126108e25760008081fd5b858201356040828211156108f8576108f86107f7565b610909828b01601f1916890161080d565b92508183528c818386010111156109205760008081fd5b81818501898501375060009082018701528452509183019183016108ac565b50979650505050505050565b67ffffffffffffffff8116811461034457600080fd5b600082601f83011261097257600080fd5b813560206109826108848361083e565b82815260059290921b840181019181810190868411156109a157600080fd5b8286015b848110156109c55780356109b88161094b565b83529183019183016109a5565b509695505050505050565b6000806000606084860312156109e557600080fd5b833567ffffffffffffffff808211156109fd57600080fd5b610a0987838801610862565b9450602091508186013581811115610a2057600080fd5b8601601f81018813610a3157600080fd5b8035610a3f6108848261083e565b81815260059190911b8201840190848101908a831115610a5e57600080fd5b928501925b82841015610a7c57833582529285019290850190610a63565b96505050506040860135915080821115610a9557600080fd5b50610aa286828701610961565b9150509250925092565b60008060408385031215610abf57600080fd5b823591506020830135610ad18161094b565b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b60048110610b1057634e487b7160e01b600052602160045260246000fd5b9052565b8e8152602081018e905260078d900b604082015267ffffffffffffffff8c1660608201526101c08101610b4c608083018d60030b9052565b610b5960a083018c610af2565b63ffffffff8a1660c083015263ffffffff891660e0830152610b8161010083018960070b9052565b67ffffffffffffffff871661012083015267ffffffffffffffff8616610140830152610bb361016083018660070b9052565b67ffffffffffffffff841661018083015267ffffffffffffffff83166101a08301529f9e505050505050505050505050505050565b60006101c08201905082518252602083015160208301526040830151610c13604084018260070b9052565b506060830151610c2f606084018267ffffffffffffffff169052565b506080830151610c44608084018260030b9052565b5060a0830151610c5760a0840182610af2565b5060c0830151610c6f60c084018263ffffffff169052565b5060e0830151610c8760e084018263ffffffff169052565b5061010080840151610c9d8285018260070b9052565b50506101208381015167ffffffffffffffff81168483015250506101408381015167ffffffffffffffff811684830152505061016080840151610ce48285018260070b9052565b50506101808381015167ffffffffffffffff81168483015250506101a08381015167ffffffffffffffff8116848301526104ee565b600060208284031215610d2b57600080fd5b813567ffffffffffffffff811115610d4257600080fd5b610d4e84828501610862565b949350505050565b634e487b7160e01b600052603260045260246000fd5b600081358060070b81146104f157600080fd5b600081356104f18161094b565b600081358060030b81146104f157600080fd5b60008135600481106104f157600080fd5b60048210610dce57634e487b7160e01b600052602160045260246000fd5b805474ff00000000000000000000000000000000000000008360a01b167fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8216178255505050565b6000813563ffffffff811681146104f157600080fd5b813581556020820135600182015560028101610e6c610e4d60408501610d6c565b825467ffffffffffffffff191667ffffffffffffffff91909116178255565b610ead610e7b60608501610d7f565b82546fffffffffffffffff0000000000000000191660409190911b6fffffffffffffffff000000000000000016178255565b610f04610ebc60808501610d8c565b8280548260801b73ffffffff00000000000000000000000000000000167fffffffffffffffffffffffff00000000ffffffffffffffffffffffffffffffff8216178255505050565b610f19610f1360a08501610d9f565b82610db0565b610f72610f2860c08501610e16565b82547fffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffff1660a89190911b78ffffffff00000000000000000000000000000000000000000016178255565b610fcf610f8160e08501610e16565b82547fffffff00000000ffffffffffffffffffffffffffffffffffffffffffffffffff1660c89190911b7cffffffff0000000000000000000000000000000000000000000000000016178255565b5060038101610fe4610e4d6101008501610d6c565b610ff4610e7b6101208501610d7f565b61104d6110046101408501610d7f565b82547fffffffffffffffff0000000000000000ffffffffffffffffffffffffffffffff1660809190911b77ffffffffffffffff0000000000000000000000000000000016178255565b6110a661105d6101608501610d6c565b825477ffffffffffffffffffffffffffffffffffffffffffffffff1660c09190911b7fffffffffffffffff00000000000000000000000000000000000000000000000016178255565b50600481016110bb610e4d6101808501610d7f565b6101e2610e7b6101a08501610d7f565b634e487b7160e01b600052601160045260246000fd5b6000600182016110f3576110f36110cb565b5060010190565b60008282101561110c5761110c6110cb565b50039056fea164736f6c634300080d000a";

type MockPythConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockPythConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockPyth__factory extends ContractFactory {
  constructor(...args: MockPythConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockPyth> {
    return super.deploy(overrides || {}) as Promise<MockPyth>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockPyth {
    return super.attach(address) as MockPyth;
  }
  override connect(signer: Signer): MockPyth__factory {
    return super.connect(signer) as MockPyth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockPythInterface {
    return new utils.Interface(_abi) as MockPythInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockPyth {
    return new Contract(address, _abi, signerOrProvider) as MockPyth;
  }
}
