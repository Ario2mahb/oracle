/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  PancakePairHarness,
  PancakePairHarnessInterface,
} from "../../../contracts/test/PancakePairHarness";

const _abi = [
  {
    inputs: [],
    name: "currentBlockTimestamp",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance1",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610505806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635a3d549311610076578063abf812721161005b578063abf8127214610192578063d21220a7146101af578063d9fc83c6146101c257600080fd5b80635a3d5493146101805780637464fc3d1461018957600080fd5b80630902f1ac146100a85780630dfe1681146100e8578063485cc955146101135780635909c0d514610169575b600080fd5b600254604080516001600160701b038084168252600160701b8404166020820152600160e01b90920463ffffffff16908201526060015b60405180910390f35b6000546100fb906001600160a01b031681565b6040516001600160a01b0390911681526020016100df565b6101676101213660046103db565b600080546001600160a01b039384167fffffffffffffffffffffffff00000000000000000000000000000000000000009182161790915560018054929093169116179055565b005b61017260035481565b6040519081526020016100df565b61017260045481565b61017260055481565b61019a6101d5565b60405163ffffffff90911681526020016100df565b6001546100fb906001600160a01b031681565b6101676101d0366004610425565b6101eb565b60006101e664010000000042610481565b905090565b6001600160701b03841180159061020957506001600160701b038311155b6102595760405162461bcd60e51b815260206004820152601360248201527f50616e63616b6556323a204f564552464c4f5700000000000000000000000000604482015260640160405180910390fd5b600061026a64010000000042610481565b60025490915063ffffffff600160e01b909104811682039081161580159061029a57506001600160701b03841615155b80156102ae57506001600160701b03831615155b15610319578063ffffffff166102d6856102c786610384565b6001600160e01b0316906103a3565b600380546001600160e01b03929092169290920201905563ffffffff8116610301846102c787610384565b600480546001600160e01b0392909216929092020190555b506002805463ffffffff909216600160e01b026001600160e01b036001600160701b03968716600160701b027fffffffff0000000000000000000000000000000000000000000000000000000090941696909716959095179190911794909416929092179092555050565b600061039d600160701b6001600160701b038416610495565b92915050565b60006103b86001600160701b038316846104d2565b9392505050565b80356001600160a01b03811681146103d657600080fd5b919050565b600080604083850312156103ee57600080fd5b6103f7836103bf565b9150610405602084016103bf565b90509250929050565b80356001600160701b03811681146103d657600080fd5b6000806000806080858703121561043b57600080fd5b84359350602085013592506104526040860161040e565b91506104606060860161040e565b905092959194509250565b634e487b7160e01b600052601260045260246000fd5b6000826104905761049061046b565b500690565b60006001600160e01b03808316818516818304811182151516156104c957634e487b7160e01b600052601160045260246000fd5b02949350505050565b60006001600160e01b03808416806104ec576104ec61046b565b9216919091049291505056fea164736f6c634300080d000a";

type PancakePairHarnessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PancakePairHarnessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PancakePairHarness__factory extends ContractFactory {
  constructor(...args: PancakePairHarnessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PancakePairHarness> {
    return super.deploy(overrides || {}) as Promise<PancakePairHarness>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PancakePairHarness {
    return super.attach(address) as PancakePairHarness;
  }
  override connect(signer: Signer): PancakePairHarness__factory {
    return super.connect(signer) as PancakePairHarness__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PancakePairHarnessInterface {
    return new utils.Interface(_abi) as PancakePairHarnessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PancakePairHarness {
    return new Contract(address, _abi, signerOrProvider) as PancakePairHarness;
  }
}
