From 4afd2104ea439f46f78c26918e54943ffd83c56a Mon Sep 17 00:00:00 2001
From: 0xlucian <0xluciandev@gmail.com>
Date: Fri, 19 Jan 2024 14:06:03 +0200
Subject: [PATCH] refactor: address PR comments

---
 test/WstETHOracle.ts      |  3 ++-
 test/fork/wstETHOracle.ts | 54 ++++++++++-----------------------------
 2 files changed, 16 insertions(+), 41 deletions(-)

diff --git a/test/WstETHOracle.ts b/test/WstETHOracle.ts
index 72af64a..6fa961a 100755
--- a/test/WstETHOracle.ts
+++ b/test/WstETHOracle.ts
@@ -3,13 +3,14 @@ import chai from "chai";
 import { parseUnits } from "ethers/lib/utils";
 import { ethers } from "hardhat";
 
+import { ADDRESSES } from "../helpers/deploymentConfig";
 import { IStETH, ResilientOracleInterface } from "../typechain-types";
 import { addr0000 } from "./utils/data";
 
 const { expect } = chai;
 chai.use(smock.matchers);
 
-const WSTETH = "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0";
+const WSTETH = ADDRESSES.ethereum.wstETHAddress;
 const WETH = "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2";
 
 const WETH_USD_PRICE = parseUnits("2500", 18); // 2500 USD for 1 WETH
diff --git a/test/fork/wstETHOracle.ts b/test/fork/wstETHOracle.ts
index cea5e28..4994280 100644
--- a/test/fork/wstETHOracle.ts
+++ b/test/fork/wstETHOracle.ts
@@ -7,6 +7,7 @@ import { ethers, upgrades } from "hardhat";
 
 import { contracts as ethereum } from "../../deployments/ethereum.json";
 import { contracts as sepolia } from "../../deployments/sepolia.json";
+import { ADDRESSES, assets } from "../../helpers/deploymentConfig";
 import { ResilientOracle, WstETHOracle__factory } from "../../typechain-types";
 import { TokenConfigStruct } from "../../typechain-types/contracts/ResilientOracle";
 import { WstETHOracle } from "../../typechain-types/contracts/oracles/WstETHOracle";
@@ -17,6 +18,10 @@ import { forking, initMainnetUser } from "./utils";
 const { expect } = chai;
 chai.use(smock.matchers);
 
+type BlockConfig = {
+  [key: string]: number;
+};
+
 const FORK: boolean = process.env.FORK === "true";
 const FORKED_NETWORK: string = process.env.FORKED_NETWORK || "";
 const WETH_USD_PRICE_DENOMINATOR = parseUnits("1", 18);
@@ -26,33 +31,10 @@ const oracleAddress = {
   sepolia: sepolia.ResilientOracle.address,
 };
 
-type BlockConfig = {
-  [key: string]: number;
-};
-
-type AddressConfig = {
-  [key: string]: string;
-};
-
-const stETHAddress: AddressConfig = {
-  ethereum: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
-  sepolia: "0xF5465B70Af90AEb26Aa13b1000a8CbEA53a5f4cf",
-};
-
-const wstETHAddress: AddressConfig = {
-  ethereum: "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
-  sepolia: "0x9b87ea90fdb55e1a0f17fbeddcf7eb0ac4d50493",
-};
-
-const WETHAddress: AddressConfig = {
-  ethereum: "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
-  sepolia: "0x700868CAbb60e90d77B6588ce072d9859ec8E281",
-};
+const { stETHAddress, wstETHAddress, timelock } = ADDRESSES[FORKED_NETWORK];
 
-const contractAdmin: AddressConfig = {
-  ethereum: "0x285960C5B22fD66A736C7136967A3eB15e93CC67",
-  sepolia: "0x94fa6078b6b8a26f0b6edffbe6501b22a10470fb",
-};
+const WETHAsset = assets[FORKED_NETWORK].find(asset => asset.token === "WETH");
+const WETHAddress = WETHAsset?.address ?? addr0000;
 
 const blockNumberPerNetwork: BlockConfig = {
   ethereum: 19000000,
@@ -70,23 +52,15 @@ if (FORK && (FORKED_NETWORK === "ethereum" || FORKED_NETWORK === "sepolia")) {
     describe(`Price configuration validation for network ${FORKED_NETWORK}`, () => {
       before(async () => {
         oracle = await ethers.getContractAt("ResilientOracle", oracleAddress[FORKED_NETWORK]);
-        wstETH = await ethers.getContractAt(WSTETH_ABI, wstETHAddress[FORKED_NETWORK]);
+        wstETH = await ethers.getContractAt(WSTETH_ABI, wstETHAddress);
         const WstETHOracleFactory: WstETHOracle__factory = await ethers.getContractFactory("WstETHOracle");
         wstETHOracle = await upgrades.deployProxy(WstETHOracleFactory, [], {
-          constructorArgs: [
-            wstETHAddress[FORKED_NETWORK],
-            WETHAddress[FORKED_NETWORK],
-            stETHAddress[FORKED_NETWORK],
-            oracle.address,
-          ],
+          constructorArgs: [wstETHAddress, WETHAddress, stETHAddress, oracle.address],
         });
-        const impersonatedContractAdmin = await initMainnetUser(
-          contractAdmin[FORKED_NETWORK],
-          ethers.utils.parseUnits("2"),
-        );
+        const impersonatedContractAdmin = await initMainnetUser(timelock, ethers.utils.parseUnits("2"));
 
         const tokenConfig: TokenConfigStruct = {
-          asset: wstETHAddress[FORKED_NETWORK],
+          asset: wstETHAddress,
           oracles: [wstETHOracle.address, addr0000, addr0000],
           enableFlagsForOracles: [true, false, false],
         };
@@ -95,10 +69,10 @@ if (FORK && (FORKED_NETWORK === "ethereum" || FORKED_NETWORK === "sepolia")) {
       });
 
       it("Validate price for wstETH", async () => {
-        const WETH_USD_PRICE = await oracle.getPrice(WETHAddress[FORKED_NETWORK]);
+        const WETH_USD_PRICE = await oracle.getPrice(WETHAddress);
         const STETH_AMOUNT_FOR_ONE_WSTETH = await wstETH.stEthPerToken();
         const expectedPrice = WETH_USD_PRICE.mul(STETH_AMOUNT_FOR_ONE_WSTETH).div(WETH_USD_PRICE_DENOMINATOR);
-        expect(await oracle.getPrice(wstETHAddress[FORKED_NETWORK])).to.equal(expectedPrice);
+        expect(await oracle.getPrice(wstETHAddress)).to.equal(expectedPrice);
       });
     });
   });
-- 
2.27.0

